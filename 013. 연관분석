# [ 연관 분석 ]
# 비지도 학습
# 장바구니 분석 : 장바구니를 분석해서 장바구니가 가지고 있는 연관 규칙을 발견
# '맥주를 구매하는 고객은 주로 오징어를 구매하더라'라는 두 상품의 연관 규칙을 발견
# => 상품 추천, 번들 판매, 교차 판매, 판매 진열 변경, ...

# [ 장바구니 목록 ]
# 고객1 : [맥주, 오징어, 치즈]
# 고객2 : [소주, 맥주, 라면]
# 고객3 : [맥주, 오징어]
# 고객4 : [라면, 김치, 계란]
# 고객5 : [맥주, 소세지]

# 맥주를 구매하는 고객이 주로 구매하는 상품이 무엇인가?
# 2회 구매 : 오징어
# 1회 구매 : 치즈, 라면, 소주, 소세지 ...

# 평가 지표
# 1. 지지도 : 추천 데이터를 얼마나 지지할수 있느냐에 대한 정도(함께 구매한 비율이 높을수록 지지할만하다)
# P(A n B) = P(맥주 n 오징어) = 맥주와 오징어를 동시에 구매한 횟수 / 전체 장바구니 수 = 2/5

# 2. 신뢰도 : 추천 상품에 대한 신뢰도(추천에 대한 강도*)
# P(A|B) = P(오징어|맥주) = P(오징어 n 맥주) / P(맥주)
# case1 : 원래는 맥주를 산 횟수가 10회, 맥주랑 오징어를 동시에 구매한 횟수 2회  => 신뢰도 : (2/20)/(10/20) = 2/10
# case2 : 원래는 맥주를 산 횟수가 5회,  맥주랑 오징어를 동시에 구매한 횟수 2회  => 신뢰도 : 2/5
# 총 장바구니 수 : 20

# 3. 향상도 : 우연히 상품이 구매가 많아서 동시 구매가 많아질 확률을 재조정한 값
#             우연히 그 날 오징어 구매가 많아서 맥주와 오징어 동시 구매도 많아진 것일수 있음     
# P(A|B) / P(A) = P(오징어|맥주) / P(오징어)

# case1 : 원래는 맥주를 산 횟수가 10회, 맥주랑 오징어를 동시에 구매한 횟수 2회(오징어 5회)  => 2/10 / (5/20)
# case2 : 원래는 맥주를 산 횟수가 5회,  맥주랑 오징어를 동시에 구매한 횟수 2회(오징어 10회)  => 2/5 / (10/20)

# [ 참고 : 조건부 확률 ]
#       대출O 대출X 
# 스팸   48    2     50
# 햄     5     45    50
#        53    47
       
# 대출 => 스팸일 확률?
# P(스팸|대출) = P(스팸 n 대출) / P(대출) = (48/100)/(53/100) = 48/53
# P(A|B) = P(A n B) /  P(B)


# [ 예제 ]
# A편의점의 최근 1년 장바구니는 총 500개로 확인되었다.
# 그 중 각각의 구매 횟수가 다음과 같다고 가정하자.

# 군고구마 총 구매 횟수 : 50
# 군고구마 우유 구매 횟수 : 25
# 우유 총 구매 횟수 : 50

# 삼각깁밥 총 구매 횟수 : 100
# 삼각김밥, 컵라면 구매 횟수 : 80
# 컵라면 총 구매 횟수 : 90

# 불닭볶음면 총 구매 횟수 : 5
# 불닭볶음면, 스트링 치즈 구매 횟수 : 4
# 스트링 치즈 총 구매 횟수 : 10
#                                  지지도,  신뢰도,        향상도
# 군고구마 => 우유의 추천            25/500   25/50=0.5    0.5/(50/500)=5
# 삼각김밥 => 컵라면 추천            80/500   80/100=0.8   0.8/(90/500)=4.44
# 불닭볶음면 => 스트링 치즈 추천      4/500     4/5=0.8     0.8/(10/500)=40 


# [ 연관 분석 실습 ]
# 1. data loading
vlist = [['맥주', '오징어', '치즈'],  
         ['소주', '맥주', '라면'], 
         ['맥주', '오징어'], 
         ['라면', '김치', '계란'], 
         ['맥주', '소세지']]

# 참고 - 실 데이터 형식
# 구매아이디   날짜                품목
# 1          2001/01/01 14:00     계란    
# 1          2001/01/01 14:00     라면
# 2          2001/01/01 14:05     맥주
# 2          2001/01/01 14:05     소주
# 2          2001/01/01 14:05     김치

# 자 그럼 위 데이터에서는 맥주 -> 오징어에 대한 지지도, 신뢰도와 향상도는 몇 일까요?
# - 지지도 : P(맥주 n 오징어) = 2/5 = 0.4
# - 신뢰도 : P(오징어|맥주) = 2/4 = 0.5
#            P(오징어|맥주) = P(맥주 n 오징어) / P(맥주) 
#                          = (2/5) / (4/5) 
# - 향상도 : P(오징어|맥주) / P(오징어) = 0.5 / (2/5) = 1.25
                                             
# 2. modeling
# pip install mlxtend
from mlxtend.preprocessing import TransactionEncoder              # 트랜잭션데이터 변환용
from mlxtend.frequent_patterns import apriori, association_rules  # 모델링

# 데이터 변환
m_te = TransactionEncoder()
alist = m_te.fit(vlist).transform(vlist)

df_list = DataFrame(alist, columns = m_te.columns_ )

# 모델링
m_ap = apriori(df_list, min_support=0.1, use_colnames=True)
m_ap

df_result = association_rules(m_ap, metric='lift', min_threshold=1)
df_result.columns
df_result[['antecedents', 'consequents', 'support', 'confidence', 'lift']]
